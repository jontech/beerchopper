/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.0.1/userguide/tutorial_java_projects.html
 */

plugins {
    id 'org.springframework.boot' version '2.2.4.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
        
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building a CLI application.
    id 'application'

    id "org.flywaydb.flyway" version "6.2.0"
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // This dependency is used by the application.
    implementation 'com.google.guava:guava:28.0-jre'

    implementation 'org.springframework.boot:spring-boot-starter'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'

    compile group: 'mysql', name: 'mysql-connector-java', version: '8.0.18'

    compile files('lib/com.google.ortools.jar')
    compile files('lib/protobuf.jar')
}

application {
    // Define the main class for the application.
    mainClassName = 'project.App'
    applicationDefaultJvmArgs = ["-Djava.library.path=lib"]
}

test {
    systemProperty 'java.library.path', 'lib'
    useJUnitPlatform()

    testLogging {
        events "passed", "skipped", "failed"
    }

    failFast true
}

flyway {
    url = 'jdbc:mysql://db/beerchopper'
    user = 'root'
    password = '123'
}

tasks.register("setup") {
    def download = { url ->
        exec {
             executable 'wget'
             args '-nc', '-q', '-P', 'data', url
        }
    }
    doLast {
       println "Creating data dir"

       exec {
            executable 'mkdir'
            args 'data'
            ignoreExitValue true
       }
       
       println "Getting OR tools"

       download 'https://github.com/google/or-tools/releases/download/v7.5/or-tools_ubuntu-18.04_v7.5.7466.tar.gz'
       exec {
            executable 'tar'
            args '-zxf', 'data/or-tools_ubuntu-18.04_v7.5.7466.tar.gz', '-C', '/tmp'
       }
       exec {
            executable 'mv'
            args '-n', '/tmp/or-tools_Ubuntu-18.04-64bit_v7.5.7466/lib', 'lib'
       }

       println "Getting data"
       
       download 'https://raw.githubusercontent.com/brewdega/open-beer-database-dumps/master/dumps/geocodes.csv'
       download 'https://raw.githubusercontent.com/brewdega/open-beer-database-dumps/master/dumps/breweries.csv'
       download 'https://raw.githubusercontent.com/brewdega/open-beer-database-dumps/master/dumps/beers.csv'
    }

    setup.finalizedBy flywayMigrate
}
